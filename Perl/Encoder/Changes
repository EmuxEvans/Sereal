Revision history for Perl extension Sereal-Encoder

****************************************************************
* Warning: For a seamless upgrade, upgrade to version 3        *
*          of the decoder before upgrading to version 3 of the *
*          encoder!                                            *
****************************************************************
3.006_007 Nov 25 2015
  * CHANGED: Sort order for sort_keys=1 is now defined to be
    "in order by length of bytes, then by byte order of the 
    underlying string, then by utd8ness, with non-utf8 first". 
    This sort order was chosen because it requires the least 
    operations to perform in the most cases, has a bounded number
    of cases where we would have to create any temporary SV's or 
    to do operations that require us to introspect codepoints in
    utf8 strings. IOW purely performance. Note that so long
    as you compare data created with the same sort_keys setting
    you will ALWAYS get the same order *in process*, regardless
    of what you choose. Backwards compatible support for  the
    old order is available via sort_keys=3.
    
    ADDED: sort_keys=2 to provide "perl cmp order"
           (Its just there because it is easy to do, not for any
            good reason.)
    ADDED: sort_keys=3 to provide "rev perl cmp order"

    Legacy sort order was equivalent to sort_keys=3, use this 
    option *ONLY* if you are extremely sensitive to changes in the
    sorted order (or "canonical form").

  * [DECODER] Build fixes for boxes without any Sereal installed (it seems
    to be common on certain types of smokers, and not on others).

3.006_006 Nov 21 2015
  * Fix issues with serializing blessed scalars where we see the
    blessed scalar before we see the reference to it.

3.006_005 Nov 20 2015
  * Rework sort logic to be more efficient

3.006_004 Nov 18 2015
  * Handle PVLV undefs

3.006_003 Nov 18 2015
  * Third, and hopefully final implementation of sorted tied hashes
    In short qsort_r() broke everything but Linux :-( Switching
    to qsort() should fix the problem.
  * Optimizations.
  
3.006_002
  * Second try at fixing sorted tied hashes.
  * Build fixes for 5.8.9
  * Doc patches

3.006_001
  * First try at fixing sorted tied hashes

3.006 Nov 14 2015
  * [DECODER] fix segfaults from heavily corrupted data. Guards
    against various pathological cases which could cause segfaults
    fixed. Thanks to Damian Gryski and "fuzzing sereal with afl"
    for finding these cases.
  * [ENCODER] Various subtle fixes to how we choose whether to serialize
    the string or numeric version of a value, in particular to
    ensure that "00" always round trips as "00", and related issues.
    Note this fix has correctness and performance consequences. In
    some cases values that used to serialized as integers (arguably
    incorrectly) will be serialized as strings instead, and some code
    maybe be slower to serialize.
    NOTE: Some issues related to this subject are not fixable without
    a protocol change. In particular this change may affect the behavior
    of code that uses binary logical operators on values serialized
    with Perl.
    Thanks to Zefram, Tom, and others for help with this issue.
  * Fixups for cast warnings under -Wint-to-ptr builds by using
    using PTR2INT and INT2PTR for casting our objects.
  * Win32 fixes
  * Build improvements
  * Changes to how we generate constants

3.005 Jan 05 2015
  * Build improvements related to char signedness being platform
    dependent.

3.004 Dec 27 2014
  * Performance optimizations and other miscellaneous changes.
  * Build improvements.
  * Win32 fixes for weakrefs.

3.003 Oct 19 2014
  * Niko Tyni fixed the 64-bit big endian Sereal bug! (Yay Niko!)
  * Setup META.yml correctly so that certain dependencies are
    marked as being test dependencies and not build or run-time
    dependencies.
  * Allow one to build against an externally supplied version
    of csnappy or miniz. Thanks to Petr Písař <ppisar@redhat.com>

3.002 Aug 20 2014
  Summary of changes from 3.001 - 3.002
  - Introduce "canonical" option to encoder
  - Introduce "canonical_refs" option to encoder

  * Test Infra Changes
  - Split up bulk tests to speed up testing and make it easier
    to see when a failure is restricted to a specific option.

  * Big-Endian Support
  - Improved support for Big-Endian machines. We now build and pass test
    on Sparc and HP-UX and other platforms with big-endian or strict
    alignedness requirements. Much thanks to Jarkko Hietaniemi,
    Gregor Herrmann, and H. Merijn Brand for for their assistance with
    this.
  - We still have issues with s390x (Z/Os) with Sereal. If someone wants
    to help it would be appreciated.

3.001
  - Upgrade to version 3 of the protocol
    * Add Zlib compression support to the protocol
    * Add Zlib support to Encoder/Decoder
    * Add CANONICAL_UNDEF tag to represent PL_sv_undef
    * Change magic header so it is trivial to detect
      and reject utf8 encoded Sereal packets.
  - Change how we serialize variables which have more
    than one of IOK, NOK, and POK set. In general we
    favour the numeric form, with the exception of when
    all three are set when we favour the string form
    (this is to handle engineering notation like "0E0"
    where numeric and string equivalence may differ)

Full change history available at https://github.com/Sereal/Sereal

